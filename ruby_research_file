# Once you feel like you understand how it works, write down
# its arguments (name, data type, optional/required, default value if any)
# its return type
# a line of code showing how to call the method and what will be returned
#
# String
#
# length: - returns integer data type
# - used to calculate how many characters are in a string
str = "house"
str.length

# strip: - returns
# - returns string with whitespace removed (vertical, horizonal, leading, following), returns string
"   hello
   ".strip

# split: - divides string into substrings based on a delimiter
# - returns an array of these substrings
"hello doll face".split

# start_with?: - returns true or false
# - returns true if string tarts w/ one of the prefixes given
"hey there".start_with?("hey ")

Array

# first: - returns the first element, or the first n elements, of the Array
# - if array empty returns nil, and an empty array
a = [9, 10, 12, 8, 5]
a.first(3)

# delete_at: - deletes the element at the specifie index, returning the eleemnt, or nil if the index is out of range
c = [1,2,3,4,5]
c.delete_at(3)

# delete: - deletes all items from self that are equal to (argument)
d = [1,2,3,4,5,5,4]
d.delete(5)

# pop: - removes last element from self and returns ir, or nil if array empty
e = [1,2,3,4,4,4,5,4]
e.pop(2)

Hash

# to_a: - convert hash to a nested array of [key, value] arrays
r = {"c" => 300, "a" => 100, "d" => 400, "e" =>300}
r.to_a

# has_key?: - returns true if the given key is present in Hash
s = {"a" => 100, "n" => 200}
s.has_key?("a")

# has_value?: - returns true if the given balue is present for some key in hash

# Time
#
# now: - creates a new time object for the current time.
time = "1991 10 11"
time.now

# File
#
# exist?: - return true if the named file exists

# extname: - returns extension (portion of file name in path starting from last period).
